// <auto-generated />
using System;
using BUTPFIS.web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BUTPFIS.web.Migrations
{
    [DbContext(typeof(FISDbContext))]
    partial class FISDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BUTPFIS.web.Models.Domain.CourseInfo", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("CourseInfos");
                });

            modelBuilder.Entity("BUTPFIS.web.Models.Domain.FacultyInfo", b =>
                {
                    b.Property<Guid>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expertise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Honours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seminar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FId");

                    b.ToTable("FacultyInfos");
                });

            modelBuilder.Entity("CourseInfoFacultyInfo", b =>
                {
                    b.Property<Guid>("CourseInfosCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FacultyInfosFId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseInfosCourseId", "FacultyInfosFId");

                    b.HasIndex("FacultyInfosFId");

                    b.ToTable("CourseInfoFacultyInfo");
                });

            modelBuilder.Entity("CourseInfoFacultyInfo", b =>
                {
                    b.HasOne("BUTPFIS.web.Models.Domain.CourseInfo", null)
                        .WithMany()
                        .HasForeignKey("CourseInfosCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BUTPFIS.web.Models.Domain.FacultyInfo", null)
                        .WithMany()
                        .HasForeignKey("FacultyInfosFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
